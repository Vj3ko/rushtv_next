// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String    @unique
  emailVerified DateTime?
  image         String?
  password      String
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt

  // accounts        Account[]
  favoriteMovies  FavoriteMovies[]
  favoriteTvShows FavoriteTvShows[]
  favoritePeople  FavoritePeople[]
}

// model Account {
//   id                String  @id @default(auto()) @map("_id") @db.ObjectId
//   userId            String  @db.ObjectId
//   type              String
//   provider          String
//   providerAccountId String
//   refresh_token     String? @db.String
//   access_token      String? @db.String
//   expires_at        Int?
//   token_type        String?
//   scope             String?
//   id_token          String? @db.String
//   session_state     String?

//   user User @relation(fields: [userId], references: [id], onDelete: Cascade)

//   @@unique([provider, providerAccountId])
// }

model FavoriteMovies {
  id         String @id @default(auto()) @map("_id") @db.ObjectId
  movieTitle String
  movieId    String
  movieImg   String

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}

model FavoriteTvShows {
  id      String @id @default(auto()) @map("_id") @db.ObjectId
  tvTitle String
  tvId    String
  tvImg   String

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}

model FavoritePeople {
  id          String @id @default(auto()) @map("_id") @db.ObjectId
  personTitle String
  personId    String
  personImg   String

  user   User?   @relation(fields: [userId], references: [id])
  userId String? @db.ObjectId
}
